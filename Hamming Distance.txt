The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.

class Solution:
    def hammingDistance(self, x, y):
        """
        :type x: int
        :type y: int
        :rtype: int
        """
        a = str(bin(x)[2:]).zfill(32)
        b = str(bin(y)[2:]).zfill(32)
        count = 0
        for i in range(len(a)):
            if a[i] != b[i]:
                count += 1
        
	# or return bin(x^y).count('1') instead, x^y=5 bin(x^y)=0b101 count('1')=2
	
	return count

	
	
