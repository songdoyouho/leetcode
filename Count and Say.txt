The count-and-say sequence is the sequence of integers with the first five terms as following:

1.     1
2.     11
3.     21
4.     1211
5.     111221
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.
Given an integer n, generate the nth term of the count-and-say sequence.

Note: Each term of the sequence of integers will be represented as a string.

Example 1:

Input: 1
Output: "1"
Example 2:

Input: 4
Output: "1211"

python3
class Solution:
    def countAndSay(self, n):
        """
        :type n: int
        :rtype: str
        """
        result = '1' # 第一 round
        for _ in range(n-1): # 已經有第一 round 了
            prev = result
            result = ''
            count = 0 # 紀錄現在到哪個位置
            while count < len(prev):
                cur = prev[count] # 紀錄目前的數字是多少
                num = 1 # 紀錄目前數字出現的次數是多少
                count += 1
                while count < len(prev) and prev[count] == cur: # 如果還沒到 str 的底，目前的數字又還沒改變
                    num += 1
                    count += 1
                result += str(num) + str(cur)
        return result
