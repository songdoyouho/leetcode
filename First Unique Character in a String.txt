Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.

python3
class Solution:
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        if len(s) == 0:
            return -1
        
        hash_table = {}
        for i in range(len(s)):
            if s[i] not in hash_table:
                hash_table[s[i]] = 0
            else:
                hash_table[s[i]] += 1

        for i in range(len(s)):
            if hash_table[s[i]] == 0:
                return i
        return -1

	#or
	letters='abcdefghijklmnopqrstuvwxyz'
        index=[s.index(l) for l in letters if s.count(l) == 1]
        return min(index) if len(index) > 0 else -1

c++
