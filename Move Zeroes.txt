Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

python3
class Solution:
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        count=nums.count(0)
        nums[:]=[i for i in nums if i != 0] + [0]*count

c++
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int zero = 0;
        for(int i=0;i<nums.size();i++){
            if (nums[i] != 0) nums[zero++]=nums[i];
        }        
        zero = nums.size() - zero;
        for(;zero!=0;--zero){
            nums[nums.size() - zero] = 0;
        }
    }
};
